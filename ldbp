#!/bin/sh
# load bp files on local or remote machines
# author: Liu Hongwei
# created on 2016
# enhanced on 2019

if [ $# = 0 ]
then
	cat <<!
	usage: ./ldbp.sh -l [ -r <remote ip> ] <bp file in absolute path>
!
	exit 1
	
fi
local=""
remote=""
tmpsubshl="/tmp/temp.subshl"

while getopts lr: option
do
	case $option in
	l)
		local="yes"
		;;
	r)
		remote="yes"
                remote_host=$OPTARG
		;;
	\?)
		echo "can't handle option $option" >&2
                ;;
        esac
done

#shift `expr $OPTIND - 1`
shift $(($OPTIND - 1))
bpfile=$1 # must be in absolute path
echo $bpfile

if [ -z "$bpfile" ]
then
	echo "please specify bpfile location"
	exit 0
fi

spaname=`psql -Uscncraft -At -c "select span from spm_tbl where span like 'EPAY%'"`
if [ -z "$spaname" ]
then
	echo "EPAY is not in IS state"
	exit 1
fi

if [ ! -z "$local" ]
then
	echo debug:spa=$spaname,client=all,source=\"$bpfile\",ucl >$tmpsubshl
	subshl -F $tmpsubshl
	echo "finish loading $bpfile locally"
fi

if [ ! -z "$remote" ]
then
    if [ -z "$remote_host" ]
    then
        echo "please input remote host ip"
        exit 1
    fi

    ip="$remote_host"
    username=ainet
    passwd=ainet1
    /usr/bin/expect -c "
    spawn ssh $username@$ip
         expect {
          "*assword:" {
               send \"$passwd\n\"
               expect \"*-> \"
               send \"echo 'debug:spa=$spaname,client=all,source=\\\"$bpfile\\\",ucl' >$tmpsubshl\n\"
               expect \"*-> \"
               send \"subshl -F $tmpsubshl\n\"
               expect \"*-> \"
          }
        }
    " #>/dev/null
    echo "finish loading $bpfile remotely on $ip"
fi
